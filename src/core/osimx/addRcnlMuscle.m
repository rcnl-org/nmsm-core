function osimx = addRcnlMuscle(osimx, muscleName, muscleParameters)

muscleObjects = osimx.NMSMPipelineDocument.OsimxModel.RCNLMuscleSet.objects;

if(~isstruct(muscleObjects))
    i = 1;
    muscleObjects.RCNLMuscle = {};
else
    i = length(muscleObjects.RCNLMuscle) + 1;
end

muscles = muscleObjects.RCNLMuscle;
muscles{i}.Attributes.name = convertStringsToChars(muscleName);

muscles{i}.electromechanical_delay.Comment = 'Optimized electromechanical delay';
muscles{i}.electromechanical_delay.Text = convertStringsToChars( ...
    num2str(muscleParameters.electromechanicalDelay, 15));

muscles{i}.activation_time_constant.Comment = 'Optimized activation time constant';
muscles{i}.activation_time_constant.Text = convertStringsToChars( ...
    num2str(muscleParameters.activationTimeConstant, 15));

muscles{i}.activation_nonlinearity_constant.Comment = 'Optimized activation nonlinearity constant';
muscles{i}.activation_nonlinearity_constant.Text = convertStringsToChars( ...
    num2str(muscleParameters.activationNonlinearityConstant, 15));

muscles{i}.emg_scale_factor.Comment = 'Optimized EMG scale factor';
muscles{i}.emg_scale_factor.Text = convertStringsToChars( ...
    num2str(muscleParameters.emgScaleFactor, 15));

muscles{i}.optimal_fiber_length.Comment = 'Optimized optimal fiber length';
muscles{i}.optimal_fiber_length.Text = convertStringsToChars( ...
    num2str(muscleParameters.optimalFiberLength, 15));

muscles{i}.tendon_slack_length.Comment = 'Optimized tendon slack length';
muscles{i}.tendon_slack_length.Text = convertStringsToChars( ...
    num2str(muscleParameters.tendonSlackLength, 15));

osimx.NMSMPipelineDocument.OsimxModel.RCNLMuscleSet.objects.RCNLMuscle = muscles;

%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         Attributes.name = muscleNames{i};
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         electromechanical_delay.Comment = ['Optimized ' ...
%         'electronmechanical delay'];
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         electromechanical_delay.Text = num2str(optimizedParams.electromechanicalDelays(i));
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         activation_time_constant.Comment = ['Optimized activation ' ...
%         'time constant'];
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         activation_time_constant.Text = num2str(optimizedParams.activationTimeConstants(i));
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         activation_nonlinearity_constant.Comment = ['Optimized ' ...
%         'activation nonlinearity constant'];
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         activation_nonlinearity_constant.Text = num2str( ...
%         optimizedParams.activationNonlinearityConstants(i));
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         emg_scale_factor.Comment = 'Optimized EMG scaling factor';
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         emg_scale_factor.Text = num2str(optimizedParams.emgScaleFactors(i));
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         optimal_fiber_length_scale_factor.Comment = ['Optimized ' ...
%         'optimal fiber length scaling factor'];
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         optimal_fiber_length_scale_factor.Text = num2str( ...
%         optimizedParams.optimalFiberLengthScaleFactors(i));
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         slack_tendon_length_scale_factor.Comment = ['Optimized ' ...
%         'slack tendon length scaling factor'];
%     MTP.OpenSimDocument.OsimxModel.MTPMuscleSet.objects.RCNLMuscle{i}. ...
%         slack_tendon_length_scale_factor.Text = num2str( ...
%         optimizedParams.tendonSlackLengthScaleFactors(i));

end

