% This function is part of the NMSM Pipeline, see file for full license.
%
% This function returns all of the constraint term calculation methods
% Tools use this function for the discrete and continuous constraint
% calculations.
%
% inputs:
% constraintTermType - one of ["path", "terminal"]
% controllerType - one of ["torque", "synergy"]
% toolName - one of ["TrackingOptimization", "TreatmentOptimization", ...
%   "DesignOptimization"]
%
% (string, string) -> (struct of function handles, Array of string)
%

% ----------------------------------------------------------------------- %
% The NMSM Pipeline is a toolkit for model personalization and treatment  %
% optimization of neuromusculoskeletal models through OpenSim. See        %
% nmsm.rice.edu and the NOTICE file for more information. The             %
% NMSM Pipeline is developed at Rice University and supported by the US   %
% National Institutes of Health (R01 EB030520).                           %
%                                                                         %
% Copyright (c) 2021 Rice University and the Authors                      %
% Author(s): Marleny Vega, Claire V. Hammond                              %
%                                                                         %
% Licensed under the Apache License, Version 2.0 (the "License");         %
% you may not use this file except in compliance with the License.        %
% You may obtain a copy of the License at                                 %
% http://www.apache.org/licenses/LICENSE-2.0.                             %
%                                                                         %
% Unless required by applicable law or agreed to in writing, software     %
% distributed under the License is distributed on an "AS IS" BASIS,       %
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         %
% implied. See the License for the specific language governing            %
% permissions and limitations under the License.                          %
% ----------------------------------------------------------------------- %

function [constraintTermCalculations, allowedTypes] = ...
    generateConstraintTermStruct(constraintTermType, controllerTypes, ...
    toolName)
allowedTypes = getAllowedTypes(constraintTermType, controllerTypes, ...
    toolName);
constraintTermCalculations = ...
    getConstraintTermCalculations(constraintTermType);
end

function allowedTypes = getAllowedTypes(constraintTermType, ...
    controllerTypes, toolName)
if strcmp(constraintTermType, "path")
    constraintTermSet = { ...
        % Table with the columns:
        % Name, Supported Tools (TO, VO, DO), Supported Controllers (Torque, Synergy, Muscle)
        {"generalized_coordinate_deviation",   [1, 1, 1], [1, 1, 1]}, ...
        {"generalized_coordinate_value",       [1, 1, 1], [1, 1, 1]}, ...
        {"generalized_speed_deviation",        [1, 1, 1], [1, 1, 1]}, ...
        {"generalized_speed_value",            [1, 1, 1], [1, 1, 1]}, ...
        {"generalized_acceleration_deviation", [1, 1, 1], [1, 1, 1]}, ...
        {"generalized_acceleration_value",     [1, 1, 1], [1, 1, 1]}, ...
        {"marker_position_deviation",          [1, 1, 1], [1, 1, 1]}, ...
        {"marker_position_value",              [1, 1, 1], [1, 1, 1]}, ...
        {"marker_velocity_deviation",          [1, 1, 1], [1, 1, 1]}, ...
        {"marker_velocity_value",              [1, 1, 1], [1, 1, 1]}, ...
        {"body_orientation_deviation",         [1, 1, 1], [1, 1, 1]}, ...
        {"body_orientation_value",             [1, 1, 1], [1, 1, 1]}, ...
        {"kinetic_consistency",                [1, 1, 1], [1, 1, 1]}, ...
        {"root_segment_residual_load",         [1, 1, 1], [1, 1, 1]}, ...
        {"external_force_deviation",           [1, 1, 1], [1, 1, 1]}, ...
        {"external_force_value",               [1, 1, 1], [1, 1, 1]}, ...
        {"external_moment_deviation",          [1, 1, 1], [1, 1, 1]}, ...
        {"external_moment_value",              [1, 1, 1], [1, 1, 1]}, ...
        {"center_of_pressure_deviation",       [1, 0, 1], [1, 1, 1]}, ...
        {"center_of_pressure_deviation",       [1, 0, 1], [1, 1, 1]}, ...
        {"limit_muscle_activation",            [0, 0, 1], [0, 1, 1]}, ...
        {"limit_normalized_fiber_length",      [0, 0, 1], [0, 1, 1]}, ...
        {"user_defined",                       [1, 1, 1], [1, 1, 1]}, ...
    };

    toolNameLogical = [strcmp(toolName, "TrackingOptimization"), ...
        strcmp(toolName, "VerificationOptimization"), ...
        strcmp(toolName, "DesignOptimization")];
    assert(any(toolNameLogical), toolName + " is not a valid tool.")

    allowedTypes = string([]);
    for term = constraintTermSet
        currentTerm = term{1};
        if any(toolNameLogical & currentTerm{2}) && any(controllerTypes & currentTerm{3})
            allowedTypes(end + 1) = currentTerm{1};
        end
    end
elseif strcmp(constraintTermType, "terminal")
    constraintTermSet = { ...
        % Table with the columns:
        % Name, Supported Tools (TO, VO, DO), Supported Controllers (Torque, Synergy, Muscle)
        {"generalized_coordinate_periodicity",       [1, 1, 1], [1, 1, 1]}, ...
        {"initial_generalized_coordinate_deviation", [1, 1, 1], [1, 1, 1]}, ...
        {"initial_generalized_coordinate_value",     [1, 1, 1], [1, 1, 1]}, ...
        {"final_generalized_coordinate_deviation",   [1, 1, 1], [1, 1, 1]}, ...
        {"final_generalized_coordinate_value",       [1, 1, 1], [1, 1, 1]}, ...
        {"generalized_speed_periodicity",            [1, 1, 1], [1, 1, 1]}, ...
        {"initial_generalized_speed_deviation",      [1, 1, 1], [1, 1, 1]}, ...
        {"initial_generalized_speed_value",          [1, 1, 1], [1, 1, 1]}, ...
        {"final_generalized_speed_deviation",        [1, 1, 1], [1, 1, 1]}, ...
        {"final_generalized_speed_value",            [1, 1, 1], [1, 1, 1]}, ...
        {"marker_position_periodicity",              [1, 1, 1], [1, 1, 1]}, ...
        {"initial_marker_position_deviation",        [1, 1, 1], [1, 1, 1]}, ...
        {"initial_marker_position_value",            [1, 1, 1], [1, 1, 1]}, ...
        {"final_marker_position_deviation",          [1, 1, 1], [1, 1, 1]}, ...
        {"final_marker_position_value",              [1, 1, 1], [1, 1, 1]}, ...
        {"marker_velocity_periodicity",              [1, 1, 1], [1, 1, 1]}, ...
        {"initial_marker_velocity_deviation",        [1, 1, 1], [1, 1, 1]}, ...
        {"initial_marker_velocity_value",            [1, 1, 1], [1, 1, 1]}, ...
        {"final_marker_velocity_deviation",          [1, 1, 1], [1, 1, 1]}, ...
        {"final_marker_velocity_value",              [1, 1, 1], [1, 1, 1]}, ...
        {"body_orientation_periodicity",             [1, 1, 1], [1, 1, 1]}, ...
        {"initial_body_orientation_deviation",       [1, 1, 1], [1, 1, 1]}, ...
        {"initial_body_orientation_value",           [1, 1, 1], [1, 1, 1]}, ...
        {"final_body_orientation_deviation",         [1, 1, 1], [1, 1, 1]}, ...
        {"final_body_orientation_value",             [1, 1, 1], [1, 1, 1]}, ...
        {"root_segment_residual_load_periodicity",   [1, 1, 1], [1, 1, 1]}, ...
        {"external_force_periodicity",               [1, 1, 1], [1, 1, 1]}, ...
        {"initial_external_force_deviation",         [1, 1, 1], [1, 1, 1]}, ...
        {"initial_external_force_value",             [1, 1, 1], [1, 1, 1]}, ...
        {"final_external_force_deviation",           [1, 1, 1], [1, 1, 1]}, ...
        {"final_external_force_value",               [1, 1, 1], [1, 1, 1]}, ...
        {"external_moment_periodicity",              [1, 1, 1], [1, 1, 1]}, ...
        {"initial_external_moment_deviation",        [1, 1, 1], [1, 1, 1]}, ...
        {"initial_external_moment_value",            [1, 1, 1], [1, 1, 1]}, ...
        {"final_external_moment_deviation",          [1, 1, 1], [1, 1, 1]}, ...
        {"final_external_moment_value",              [1, 1, 1], [1, 1, 1]}, ...
        {"synergy_vector_sum",                       [1, 0, 1], [0, 1, 0]}, ...
        {"synergy_vector_magnitude",                 [1, 0, 1], [0, 1, 0]}, ...
        {"user_defined",                             [1, 1, 1], [1, 1, 1]}, ...
    };

    toolNameLogical = [strcmp(toolName, "TrackingOptimization"), ...
        strcmp(toolName, "VerificationOptimization"), ...
        strcmp(toolName, "DesignOptimization")];
    assert(any(toolNameLogical), toolName + " is not a valid tool.")

    allowedTypes = string([]);
    for term = constraintTermSet
        currentTerm = term{1};
        if any(toolNameLogical & currentTerm{2}) && any(controllerTypes & currentTerm{3})
            allowedTypes(end + 1) = currentTerm{1};
        end
    end
else
    throw(MException('', ['Constraint term type ' constraintTermType ...
        ' is not valid, must be path or terminal']))
end
end

function constraintTermCalculations = getConstraintTermCalculations(constraintTermType)

constraintTermCalculations.root_segment_residual_load = @(values, modeledValues, auxdata, constraintTerm) ...
    calcRootSegmentResidualsPathConstraints( ...
    constraintTerm, ...
    constraintTerm.load, ...
    auxdata.inverseDynamicsMomentLabels, ...
    modeledValues.inverseDynamicsMoments, ...
    values.time ...
    );

constraintTermCalculations.kinetic_consistency = @(values, modeledValues, auxdata, constraintTerm) ...
    calcKineticPathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues, ...
    values.torqueControls, ...
    constraintTerm.load ...
    );

constraintTermCalculations.limit_muscle_activation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMuscleActivationsPathConstraint( ...
    auxdata, ...
    modeledValues, ...
    constraintTerm.muscle, ...
    constraintTerm ...
    );

constraintTermCalculations.limit_normalized_fiber_length = @(values, modeledValues, auxdata, constraintTerm) ...
    calcNormalizedFiberLengthPathConstraint( ...
    auxdata, ...
    modeledValues, ...
    constraintTerm.muscle, ...
    constraintTerm ...
    );

constraintTermCalculations.marker_position_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMarkerPositionDeviationPathConstraint( ...
    constraintTerm, ...
    values.time, ...
    modeledValues.markerPositions, ...
    auxdata ...
    );

constraintTermCalculations.marker_position_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMarkerPositionValuePathConstraint( ...
    constraintTerm, ...
    values.time, ...
    modeledValues.markerPositions, ...
    auxdata ...
    );

constraintTermCalculations.marker_velocity_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMarkerVelocityDeviationPathConstraint( ...
    constraintTerm, ...
    values.time, ...
    modeledValues.markerVelocities, ...
    auxdata ...
    );

constraintTermCalculations.marker_velocity_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMarkerVelocityValuePathConstraint( ...
    constraintTerm, ...
    values.time, ...
    modeledValues.markerVelocities, ...
    auxdata ...
    );

constraintTermCalculations.generalized_coordinate_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcGeneralizedCoodinateDeviationPathConstraint( ...
    auxdata, ...
    values.time, ...
    values.positions, ...
    constraintTerm ...
    );

constraintTermCalculations.generalized_coordinate_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcGeneralizedCoodinateValuePathConstraint( ...
    auxdata, ...
    values.positions, ...
    constraintTerm ...
    );

constraintTermCalculations.generalized_speed_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcGeneralizedSpeedDeviationPathConstraint( ...
    auxdata, ...
    values.time, ...
    values.velocities, ...
    constraintTerm ...
    );

constraintTermCalculations.generalized_speed_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcGeneralizedSpeedValuePathConstraint( ...
    auxdata, ...
    values.velocities, ...
    constraintTerm ...
    );

constraintTermCalculations.generalized_acceleration_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcGeneralizedAccelerationDeviationPathConstraint( ...
    contraintTerm, ...
    auxdata, ...
    values.time, ...
    values.accelerations, ...
    constraintTerm.coordinate ...
    );

constraintTermCalculations.generalized_acceleration_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcGeneralizedAccelerationValuePathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    values.accelerations, ...
    constraintTerm.coordinate ...
    );

constraintTermCalculations.external_force_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcExternalForceDeviationPathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.forces, ...
    values.time, ...
    constraintTerm.force ...
    );

constraintTermCalculations.external_force_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcExternalForceValuePathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.forces, ...
    values.time, ...
    constraintTerm.force ...
    );

constraintTermCalculations.external_moment_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcExternalMomentDeviationPathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.moments, ...
    values.time, ...
    constraintTerm.moment ...
    );

constraintTermCalculations.external_moment_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcExternalMomentValuePathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.moments, ...
    values.time, ...
    constraintTerm.moment ...
    );

constraintTermCalculations.body_orientation_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcBodyOrientationDeviationPathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.body_orientation_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcBodyOrientationValuePathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.center_of_pressure_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcCenterOfPressureDeviationPathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues ...
    );

constraintTermCalculations.center_of_pressure_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcCenterOfPressureValuePathConstraint( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues ...
    );

constraintTermCalculations.generalized_coordinate_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcStatePositionPeriodicity( ...
    constraintTerm, ...
    values.statePositions, ...
    auxdata.statesCoordinateNames, ...
    constraintTerm.coordinate ...
    );

constraintTermCalculations.generalized_speed_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcStateVelocityPeriodicity( ...
    constraintTerm, ...
    values.stateVelocities, ...
    auxdata.statesCoordinateNames, ...
    constraintTerm.coordinate ...
    );

constraintTermCalculations.root_segment_residual_load_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcRootSegmentResidualsPeriodicity(...
    constraintTerm, ...
    modeledValues.inverseDynamicsMoments, ...
    auxdata.inverseDynamicsMomentLabels, ...
    constraintTerm.load ...
    );

constraintTermCalculations.external_force_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcExternalForcesPeriodicity(...
    modeledValues.groundReactionsLab.forces, ...
    auxdata.contactSurfaces, ...
    constraintTerm.force, ...
    constraintTerm ...
    );

constraintTermCalculations.external_moment_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcExternalMomentsPeriodicity(...
    modeledValues.groundReactionsLab.moments, ...
    auxdata.contactSurfaces, ...
    constraintTerm.moment, ...
    constraintTerm ...
    );

constraintTermCalculations.initial_generalized_coordinate_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialGeneralizedCoodinateDeviation( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.positions ...
    );

constraintTermCalculations.initial_generalized_coordinate_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialGeneralizedCoodinateValue( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.positions ...
    );

constraintTermCalculations.initial_generalized_speed_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialGeneralizedSpeedDeviation( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.velocities ...
    );

constraintTermCalculations.initial_generalized_speed_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialGeneralizedSpeedValue( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.velocities ...
    );

constraintTermCalculations.final_generalized_coordinate_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalGeneralizedCoodinateDeviation( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.positions ...
    );

constraintTermCalculations.final_generalized_coordinate_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalGeneralizedCoodinateValue( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.positions ...
    );

constraintTermCalculations.final_generalized_speed_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalGeneralizedSpeedDeviation( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.velocities ...
    );

constraintTermCalculations.final_generalized_speed_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalGeneralizedSpeedValue( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    values.velocities ...
    );

constraintTermCalculations.initial_marker_position_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialMarkerPositionDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerPositions, ...
    values.time ...
    );

constraintTermCalculations.initial_marker_position_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialMarkerPositionValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerPositions, ...
    values.time ...
    );

constraintTermCalculations.initial_marker_velocity_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialMarkerVelocityDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerVelocities, ...
    values.time ...
    );

constraintTermCalculations.initial_marker_velocity_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialMarkerVelocityValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerVelocities, ...
    values.time ...
    );

constraintTermCalculations.final_marker_position_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalMarkerPositionDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerPositions, ...
    values.time ...
    );

constraintTermCalculations.final_marker_position_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalMarkerPositionValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerPositions, ...
    values.time ...
    );

constraintTermCalculations.final_marker_velocity_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalMarkerVelocityDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerVelocities, ...
    values.time ...
    );

constraintTermCalculations.final_marker_velocity_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalMarkerVelocityValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerVelocities, ...
    values.time ...
    );

constraintTermCalculations.marker_position_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMarkerPositionPeriodicity( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerPositions, ...
    values.time ...
    );

constraintTermCalculations.marker_velocity_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcMarkerVelocityPeriodicity( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.markerVelocities, ...
    values.time ...
    );

constraintTermCalculations.initial_external_force_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialExternalForceDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.forces, ...
    values.time, ...
    constraintTerm.force ...
    );

constraintTermCalculations.initial_external_force_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialExternalForceValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.forces, ...
    values.time, ...
    constraintTerm.force ...
    );

constraintTermCalculations.initial_external_moment_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialExternalMomentDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.moments, ...
    values.time, ...
    constraintTerm.moment ...
    );

constraintTermCalculations.initial_external_moment_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialExternalMomentValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.moments, ...
    values.time, ...
    constraintTerm.moment ...
    );

constraintTermCalculations.final_external_force_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalExternalForceDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.forces, ...
    values.time, ...
    constraintTerm.force ...
    );

constraintTermCalculations.final_external_force_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalExternalForceValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.forces, ...
    values.time, ...
    constraintTerm.force ...
    );

constraintTermCalculations.final_external_moment_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalExternalMomentDeviation( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.moments, ...
    values.time, ...
    constraintTerm.moment ...
    );

constraintTermCalculations.final_external_moment_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalExternalMomentValue( ...
    constraintTerm, ...
    auxdata, ...
    modeledValues.groundReactionsLab.moments, ...
    values.time, ...
    constraintTerm.moment ...
    );

constraintTermCalculations.initial_body_orientation_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialBodyOrientationDeviation( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.initial_body_orientation_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcInitialBodyOrientationValue( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.final_body_orientation_deviation = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalBodyOrientationDeviation( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.final_body_orientation_value = @(values, modeledValues, auxdata, constraintTerm) ...
    calcFinalBodyOrientationValue( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.body_orientation_periodicity = @(values, modeledValues, auxdata, constraintTerm) ...
    calcBodyOrientationPeriodicity( ...
    constraintTerm, ...
    auxdata, ...
    values.time, ...
    modeledValues.bodyOrientations ...
    );

constraintTermCalculations.synergy_vector_sum = @(values, modeledValues, auxdata, constraintTerm) ...
    calcSynergyWeightsSum(...
    constraintTerm, ...
    values.synergyWeights, ...
    auxdata.synergyGroups, ...
    constraintTerm.synergy_group);

constraintTermCalculations.synergy_vector_magnitude = @(values, modeledValues, auxdata, constraintTerm) ...
    calcSynergyWeightsMagnitude(...
    constraintTerm, ...
    values.synergyWeights, ...
    auxdata.synergyGroups, ...
    constraintTerm.synergy_group);

constraintTermCalculations.user_defined = @(values, modeledValues, auxdata, constraintTerm) ...
    userDefinedFunction(values, ...
    modeledValues, ...
    auxdata, ...
    constraintTerm, ...
    constraintTermType);
end

function output =  ...
    userDefinedFunction(values, modeledValues, auxdata, constraintTerm, constraintTermType)
output = [];
if strcmp(constraintTerm.constraint_term_type, constraintTermType)
    fn = str2func(constraintTerm.function_name);
    output = fn(values, modeledValues, auxdata, constraintTerm);
end
end
