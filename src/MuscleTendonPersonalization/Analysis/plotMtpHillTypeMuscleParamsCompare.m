function plotMtpHillTypeMuscleParamsCompare(resultsDirectory1, ...
    resultsDirectory2)
params = getPlottingParams();
analysisDirectory1 = fullfile(resultsDirectory1, "Analysis");
analysisDirectory2 = fullfile(resultsDirectory2, "Analysis");
[muscleNames, hillTypeParams1] = extractMtpDataFromSto( ...
    fullfile(analysisDirectory1, "muscleModelParameters"));
[~, hillTypeParams2] = extractMtpDataFromSto( ...
    fullfile(analysisDirectory2, "muscleModelParameters"));
muscleNames = strrep(muscleNames, '_', ' ');
figure(Name = strcat("Compare Muscle Model Parameters"), ...
    Units=params.units, ...
    Position=params.figureSize)
if any(hillTypeParams1(5, :)<=0) | any(hillTypeParams1(6,:)<0)
    paramLabels = ["Activation Time Constant", ...
        "Activation Nonlinearity", ...
        "Electromechanical Time Delay", ...
        "EMG Scaling Factor", ...
        "Optimal Fiber Length Absolute Change", ...
        "Tendon Slack Length Absolute Change"];
else
    paramLabels = ["Activation Time Constant", ...
        "Activation Nonlinearity", ...
        "Electromechanical Time Delay", ...
        "EMG Scaling Factor", ...
        "Optimal Fiber Length Scaling Factor", ...
        "Tendon Slack Length Scaling Factor"];
end

t = tiledlayout(1, 6, ...
    TileSpacing='Compact', Padding='Compact');
set(gcf, color=params.plotBackgroundColor)
for i = 1 : numel(paramLabels)
    nexttile(i)
    set(gca, ...
        fontsize = params.tickLabelFontSize, ...
        color=params.subplotBackgroundColor)
    b = barh(1:numel(muscleNames), [hillTypeParams1(i,:); hillTypeParams2(i,:)]);
    b(1).FaceColor = params.lineColors(1);
    b(2).FaceColor = params.lineColors(2);
    title(textwrap(paramLabels(i), 20), ...
        fontsize = params.subplotTitleFontSize)
    if i == 1
        yticks(1:numel(muscleNames))
        yticklabels(muscleNames)
        legend(resultsDirectory1, resultsDirectory2, ...
            fontsize = params.legendFontSize)
    else
        yticks([])
        yticklabels([])
    end
end
end

