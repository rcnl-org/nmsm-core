% This function is part of the NMSM Pipeline, see file for full license.(
%
% 
%
% (struct) -> (None)
% Optimize ground contact parameters according to Jackson et al. (2016)

% ----------------------------------------------------------------------- %
% The NMSM Pipeline is a toolkit for model personalization and treatment  %
% optimization of neuromusculoskeletal models through OpenSim. See        %
% nmsm.rice.edu and the NOTICE file for more information. The             %
% NMSM Pipeline is developed at Rice University and supported by the US   %
% National Institutes of Health (R01 EB030520).                           %
%                                                                         %
% Copyright (c) 2021 Rice University and the Authors                      %
% Author(s): Claire V. Hammond                                            %
%                                                                         %
% Licensed under the Apache License, Version 2.0 (the "License");         %
% you may not use this file except in compliance with the License.        %
% You may obtain a copy of the License at                                 %
% http://www.apache.org/licenses/LICENSE-2.0.                             %
%                                                                         %
% Unless required by applicable law or agreed to in writing, software     %
% distributed under the License is distributed on an "AS IS" BASIS,       %
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         %
% implied. See the License for the specific language governing            %
% permissions and limitations under the License.                          %
% ----------------------------------------------------------------------- %

function writeGroundContactPersonalizationOsimxFile(inputs, ...
    groundContactModelFileName)


bodyModel = Model(inputs.bodyModel);
osimx = buildGcpOsimxTemplate(...
    replace(bodyModel.getName().toCharArray',".","_dot_"), ...
    inputs.bodyModel, ...
    inputs.restingSpringLength, ...
    inputs.dynamicFrictionCoefficient, ...
    inputs.dampingFactor ...
    );

composeSpringsByContactSurface()

for surface = 1:length(inputs.surfaces)
osimx = addGcpContactSurface(osimx, ...
    num2str(inputs.surface{surface}.isLeftFoot)
    convertStringsToChars(inputs.tasks{surface}.toesCoordinateName), ...
    );
end



bodyModel = Model(inputs.bodyModel);

GCP.OpenSimDocument.Attributes.Version = '40000';
GCP.OpenSimDocument.OsimxModel.Attributes.name = replace( ...
    bodyModel.getName.toCharArray',".","_dot_");
GCP.OpenSimDocument.OsimxModel.associated_osim_model.Comment = ...
    'Name of the associated osim model';
GCP.OpenSimDocument.OsimxModel.associated_osim_model.Text = ...
    convertStringsToChars(inputs.bodyModel);
GCP.OpenSimDocument.OsimxModel.resting_spring_length.Comment = ...
    'Resting spring length';
GCP.OpenSimDocument.OsimxModel.resting_spring_length.Text = ...
    num2str(inputs.restingSpringLength);
GCP.OpenSimDocument.OsimxModel.dynamic_friction_coefficient.Comment = ...
    'Dynamic friction coefficient';
GCP.OpenSimDocument.OsimxModel.dynamic_friction_coefficient.Text = ...
    num2str(inputs.dynamicFrictionCoefficient);
GCP.OpenSimDocument.OsimxModel.damping_factor.Comment = ...
    'Damping factor';
GCP.OpenSimDocument.OsimxModel.damping_factor.Text = ...
    num2str(inputs.dampingFactor);
GCP.OpenSimDocument.OsimxModel.GCPFootList.Comment = ...
    'Optimized foot-specific parameters';
for surface = 1:length(inputs.tasks)
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        Attributes.name = convertStringsToChars("Foot_" + surface);
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        index.Comment = 'Index of foot';
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        index.Text = num2str(surface);
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        is_left_foot.Comment = ['Flag indicating whether this is ' ...
        'a left foot'];
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        is_left_foot.Text = num2str(inputs.tasks{surface}.isLeftFoot);
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        toe_coordinate.Comment = ['Name of the toe angle coordinate ' ...
        'in the model file'];
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        toe_coordinate.Text = convertStringsToChars( ...
        inputs.tasks{surface}.toesCoordinateName);
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        toe_joint.Comment = 'Name of the toe joint in the model file';
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        toe_joint.Text = convertStringsToChars( ...
        inputs.tasks{surface}.toesJointName);
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        SpringMarkerSet.Comment = 'Set of spring markers for this foot';
    model = Model(inputs.tasks{surface}.model);
    modelMarkerSet = model.getMarkerSet;
    for marker = 1:inputs.tasks{surface}.numSpringMarkers
        currentMarker = "spring_marker_" + marker;
        springMarker = modelMarkerSet.get(currentMarker);
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.Attributes ...
            .name = convertStringsToChars(currentMarker);
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.socket_parent_frame ...
            .Comment = ['Path to a Component that satisfies the' ...
            ' Socket ''parent_frame'' of type PhysicalFrame ' ...
            '(description: The frame to which this station is fixed.).'];
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.socket_parent_frame ...
            .Text = springMarker.getPropertyByName( ...
            'socket_parent_frame').toString().toCharArray';
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.location.Comment = ...
            ['The fixed location of the station expressed in its ' ...
            'parent frame.'];
        location = springMarker.get_location();
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.location.Text = ...
            num2str([location.get(0) location.get(1) location.get(2)], 15);
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.spring_constant ...
            .Comment = 'Spring constant for marker';
        GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
            SpringMarkerSet.objects.Marker{marker}.spring_constant ...
            .Text = num2str(inputs.springConstants(marker), 15);
    end
    GCP.OpenSimDocument.OsimxModel.GCPFootList.GCPFoot{surface}. ...
        SpringMarkerSet.groups = '';
end

groundContactModelFileName = ...
    strrep(groundContactModelFileName, 'osimx', 'xml');
struct2xml(osimx, groundContactModelFileName)
copyfile(groundContactModelFileName, fullfile(strrep( ...
    groundContactModelFileName, 'xml','osimx')))
delete(groundContactModelFileName) 
end
